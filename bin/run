#!/usr/bin/env node

const http = require('http');

const Sequelize = require('sequelize'); // -- Add sequelize

const config = require('../config')[process.env.NODE_ENV || 'development'];

const log = config.log();
const app = require('../app')(config);


// ------ CONNECTING TO DATABASE ------

// Option 1: Passing a connection URI
// const sequelize = new Sequelize('sqlite::memory:') // Example for sqlite

// ------ OPTION 1: Passing a connection URI. (THIS code works by it's self) ------
// const sequelize = new Sequelize('postgres://sequelize:sequelize@localhost:5432/sequelize') // Example for postgres

// ------ OPTION 2: Option 3: Passing parameters separately (other dialects)
async function connectToPostgres() {  // -- Add database connection
  // const sequelize = new Sequelize(config.postgres.options);  // -- config/index.js
  const sequelize = new Sequelize({
    host: 'localhost',
    dialect: 'postgres'
  }); // -- config/index.js
  try {
    await sequelize.authenticate();
    log.info('Connection has been established successfully.');
    return sequelize
  } catch (error){
    log.error('Unable to connect to the database:', error );
  }
}

// alternative code
// const postgresClient = connectToPostgres();
// config.postgres.client = postgresClient; 
config.postgres.client = connectToPostgres(); 




const server = http.createServer(app);

server.listen(process.env.PORT || 3000);

server.on('listening', () => {
  log.info(
    `Hi there! I'm listening on port ${server.address().port} in ${app.get('env')} mode.`,
  );
});
